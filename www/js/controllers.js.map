{"version":3,"sources":["controllers.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAExC,UAAU,CAAC,SAAS,EAAE,UAAS,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAqC9D,CAAC,CAED,UAAU,CAAC,WAAW,EAAE,UAAS,MAAM,EAAE;AACtC,SAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,QAAM,CAAC,SAAS,GAAG,EAAE;;;AAAC,AAGtB,MAAI,kBAAkB,GAAG,IAAI,CAAC;;AAE9B,QAAM,CAAC,aAAa,GAAG,UAAS,KAAK,EAAE;AACrC,WAAO,CAAC,GAAG,CAAC,KAAK,EAAE,cAAc,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;GACtD,CAAC;;AAEF,QAAM,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE;AAC/B,WAAO,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,CAAC,SAAS,CAAC;;;;AAAC,AAIpD,YAAQ,CAAC,YAAW;;AAElB,UAAG,kBAAkB,EAAE;AACrB,eAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,cAAM,CAAC,UAAU,GAAG,KAAK,CAAC;OAC3B,MAAM;AACL,cAAM,CAAC,UAAU,GAAG,qCAAqC,CAAC;OAC3D;AACD,wBAAkB,GAAG,CAAC,kBAAkB,CAAC;KAE1C,EAAE,IAAI,CAAC,CAAC;GACV,CAAC;CACL,CAAC,CAED,UAAU,CAAC,aAAa,EAAE,UAAS,MAAM,EAAE;AACxC,SAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,QAAM,CAAC,OAAO,GAAG,YAAW;AAC1B,WAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;GACpC,CAAC;CACL,CAAC,CAED,SAAS,CAAC,YAAY,EAAE,UAAS,cAAc,EAAE,eAAe,EAAE;AAC/D,SAAO;AACL,YAAQ,EAAE,IAAI;AACd,SAAK,EAAE,EAAE;AACT,eAAW,EAAE,0BAA0B;AACvC,QAAI,EAAE,UAAU,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE;;AAEtC,YAAM,CAAC,WAAW,GAAG,YAAW;AAC9B,YAAI,OAAO,GAAG;AACZ,iBAAO,EAAG,GAAG;AACb,yBAAe,EAAG,MAAM,CAAC,eAAe,CAAC,QAAQ;AACjD,oBAAU,EAAG,MAAM,CAAC,iBAAiB,CAAC,MAAM;AAC5C,mBAAS,EAAG,IAAI;AAChB,sBAAY,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI;AACtC,qBAAW,EAAE,GAAG;AAChB,sBAAY,EAAE,GAAG;AACjB,4BAAkB,EAAE,KAAK;AACzB,wBAAc,EAAE,oBAAoB;AACpC,0BAAgB,EAAE,KAAK;AACvB,yBAAe,EAAE,CAAC;SACnB,CAAC;AACF,eAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;;AAErB,sBAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CACrC,UAAC,SAAS,EAAK;AACb,gBAAM,CAAC,MAAM,GAAG,6BAA6B,GAAG,SAAS,GAAG,GAAG,CAAC;SACjE,EACD,UAAC,GAAG,EAAK;AACP,cAAG,GAAG,IAAI,mBAAmB,EAAE;AAAE,mBAAO;WAAE;AAC1C,yBAAe,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;SAC7C,CACF,CAAC;OACH,CAAA;KACF;GACF,CAAA;CACJ,CAAC,CAAC","file":"controllers.js","sourcesContent":["angular.module('starter.controllers', [])\n\n.controller('AppCtrl', function($scope, $ionicModal, $timeout) {\n\n    // With the new view caching in Ionic, Controllers are only called\n    // when they are recreated or on app start, instead of every page change.\n    // To listen for when this page is active (for example, to refresh data),\n    // listen for the $ionicView.enter event:\n    //$scope.$on('$ionicView.enter', function(e) {\n    //});\n\n    // Form data for the login modal\n    //$scope.loginData = {};\n\n    // Create the login modal that we will use later\n    //$ionicModal.fromTemplateUrl('templates/login.html', {\n    //    scope: $scope\n    //}).then(function(modal) {\n    //    $scope.modal = modal;\n    //});\n\n    // Triggered in the login modal to close it\n    //$scope.closeLogin = function() {\n    //    $scope.modal.hide();\n    //};\n\n    // Open the login modal\n    //$scope.login = function() {\n    //    $scope.modal.show();\n    //};\n\n    // Perform the login action when the user submits the login form\n    //$scope.doLogin = function() {\n        // Simulate a login delay. Remove this and replace with your login\n        // code if using a login system\n    //    $timeout(function() {\n    //        $scope.closeLogin();\n    //    }, 1000);\n    //};\n})\n\n.controller('LoginCtrl', function($scope) {\n    console.log('LoginCtrl');\n    $scope.loginData = {};\n\n    //debug\n    var successErrorToggle = true;\n\n    $scope.resetPassword = function(valid) {\n      console.log(valid, 'Resetting pw', $scope.loginData);\n    };\n\n    $scope.doLogin = function(valid) {\n      console.log(valid, 'Doing login', $scope.loginData);\n\n      // Simulate a login delay. Remove this and replace with your login\n      // code if using a login system\n      $timeout(function() {\n\n        if(successErrorToggle) {\n          console.log('Logged in');\n          $scope.loginError = false;\n        } else {\n          $scope.loginError = \"The email and password don't match.\";\n        }\n        successErrorToggle = !successErrorToggle;\n\n      }, 1000);\n    };\n})\n\n.controller('ProfileCtrl', function($scope) {\n    console.log('ProfileCtrl');\n    $scope.signout = function() {\n      console.log('sign out logic here');\n    };\n})\n\n.directive('ethiCamera', function($cordovaCamera, $cordovaDialogs) {\n    return {\n      restrict: 'EA',\n      scope: {},\n      templateUrl: '../templates/camera.html',\n      link: function ($scope, element, attrs) {\n\n        $scope.takePicture = function() {\n          var options = {\n            quality : 100,\n            destinationType : Camera.DestinationType.DATA_URL,\n            sourceType : Camera.PictureSourceType.CAMERA,\n            allowEdit : true,\n            encodingType: Camera.EncodingType.JPEG,\n            targetWidth: 300,\n            targetHeight: 300,\n            correctOrientation: false,\n            popoverOptions: CameraPopoverOptions,\n            saveToPhotoAlbum: false,\n            cameraDirection: 1\n          };\n          console.log(options);\n\n          $cordovaCamera.getPicture(options).then(\n            (imageData) => {\n              $scope.imgURI = \"url(data:image/jpeg;base64,\" + imageData + ')';\n            },\n            (err) => {\n              if(err == 'Camera cancelled.') { return; }\n              $cordovaDialogs.alert(err, 'Error', 'Okay');\n            }\n          );\n        }\n      }\n    }\n});\n"],"sourceRoot":"/source/"}